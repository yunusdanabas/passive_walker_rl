Metadata-Version: 2.4
Name: passive_walker_rl
Version: 0.1.0
Summary: A JAX-native passive walker PPO pipeline (MuJoCo + Brax).
Author-email: Yunus Emre Danabaş <yunusdanabas@su.edu.tr>
Project-URL: Repository, https://github.com/YOUR_USERNAME/passive_walker_rl
Requires-Python: <3.11,>=3.9
Description-Content-Type: text/markdown
Requires-Dist: jax
Requires-Dist: equinox
Requires-Dist: optax
Requires-Dist: brax
Requires-Dist: gym
Requires-Dist: numpy
Requires-Dist: scipy
Requires-Dist: tqdm
Requires-Dist: matplotlib

# Passive Walker RL

A comprehensive implementation of a reinforcement learning pipeline for a passive bipedal walker using JAX. This project implements a full pipeline from Finite State Machine (FSM) expert demonstrations to Brax-scaled Proximal Policy Optimization (PPO) on a minimal bipedal walker.

## Features

- JAX-native implementation for high-performance computing
- Integration with Brax physics engine
- FSM-based expert demonstrations
- PPO implementation for policy learning
- MuJoCo model support
- Comprehensive training and evaluation pipeline

## Installation

The package requires Python 3.9 or 3.10. Install the package using pip:

```bash
pip install -e .
```

### Dependencies

The project relies on the following main dependencies:
- JAX
- Equinox
- Optax
- Brax
- Gym
- NumPy
- SciPy
- Matplotlib
- tqdm

## Project Structure

```
passive_walker_rl/
├── passive_walker/          # Main package directory
│   ├── bc/                 # Behavioral cloning components
│   ├── controllers/        # Controller implementations
│   ├── envs/              # Environment definitions
│   ├── ppo/               # PPO implementation
│   ├── utils/             # Utility functions
│   └── constants.py       # Project constants
├── scripts/               # Training and evaluation scripts
├── data/                  # Data storage
├── results/              # Training results and logs
└── passiveWalker_model.xml # MuJoCo model definition
```

## Usage

### Training

To train the agent using PPO:



## Model

The project uses a minimal bipedal walker model defined in `passiveWalker_model.xml`. The model is designed to be simple yet capable of demonstrating passive walking dynamics.


## Author

Yunus Emre Danabaş 


